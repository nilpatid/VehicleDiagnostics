# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection


#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres?user=postgres\u0026password=postgres\u0026sslmode=disable
spring.datasource.url = jdbc:postgresql://10.72.6.143:5432/dbf2dda186ab5419ca739ddd90a8add22?user=ubbabd827980745158ea62823f0048ebd\u0026password=8157d8a624c746ff872b05c74767cca2\u0026sslmode=disable
# Username and password
#spring.datasource.username = postgres
#spring.datasource.password = postgres
spring.datasource.username = ubbabd827980745158ea62823f0048ebd
spring.datasource.password = 8157d8a624c746ff872b05c74767cca2

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect



#coustem Threshold
vds.analytic.fualLevelThreshold=90
vds.analytic.speedThreshold=15
vds.analytic.heatThreshold=25
vds.analytic.rPMThreshold=2000
vds.analytic.fualConsmpThreshold=15

vds.analytic.minas.minute=2